datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model Bargain {
  id                Int      @id @default(autoincrement())
  product           String
  description       String
  active            Boolean  @default(true)
  votes             Vote[]
  comments          Comment[]
  user              User  @relation(fields: [userId], references: [id])
  userId            Int
  createdAt         DateTime @default(now())
}

model Comment {
  id                Int      @id @default(autoincrement())
  comment           String
  active            Boolean  @default(true)
  bargain           Bargain  @relation(fields: [bargainId], references: [id])
  bargainId         Int
  user              User  @relation(fields: [userId], references: [id])
  userId            Int
  createdAt         DateTime @default(now())
}

model Vote {
  id                Int      @id @default(autoincrement())
  vote              VoteType
  active            Boolean  @default(true)
  bargain           Bargain  @relation(fields: [bargainId], references: [id])
  bargainId         Int
  user              User  @relation(fields: [userId], references: [id])
  userId            Int
  createdAt         DateTime @default(now())
  @@unique([userId, bargainId])
}

enum VoteType {
  UPVOTE
  DOWNVOTE
}

model User {
  id                Int      @id @default(autoincrement())
  externalId        String   @unique
  email             String   @unique
  picture           String?
  userName          String
  bargains          Bargain[]
  votes             Vote[]
  comments          Comment[]
  createdAt         DateTime @default(now())
}